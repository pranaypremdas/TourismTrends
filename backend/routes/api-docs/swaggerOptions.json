{
	"openapi": "3.0.2",
	"info": {
		"title": "Tourism Trends API",
		"description": "The API endpoints and their usage are described in detail below.",
		"version": "1.0.0",
		"termsOfService": "http://swagger.io/terms/",
		"contact": {
			"email": "n5001927@qut.edu.au"
		},
		"license": {
			"name": "Apache 2.0",
			"url": "http://www.apache.org/licenses/LICENSE-2.0.html"
		}
	},
	"servers": [
		{
			"url": "/"
		}
	],
	"tags": [
		{
			"name": "Trends",
			"description": "API queries based tourism trend data."
		},
		{
			"name": "User Data",
			"description": "API queries based on user data."
		},
		{
			"name": "Authentication",
			"description": "User login and registration."
		}
	],
	"paths": {
		"/trends": {
			"get": {
				"tags": ["Trends"],
				"description": "Returns a list of trend data. The list is arranged by datae, in ascending order.",
				"operationId": "listAllMatchingTrends",
				"produces": ["application/json"],
				"parameters": [
					{
						"name": "region",
						"in": "body",
						"required": true,
						"description": "LGA region",
						"schema": {
							"type": "string"
						}
					},
					{
						"name": "dateRange",
						"in": "body",
						"required": false,
						"description": "Date range in the format of an array ['yyyy-mm-dd', 'yyyy-mm-dd']",
						"schema": {
							"type": "array"
						}
					}
				],
				"responses": {
					"200": {
						"description": "An array of objects containing id, date, ave_historical_occupany, ave_daily_rate, ave_length_stay, ave_booking_window. An example of one object in the array is shown below.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"data": {
											"type": "array",
											"items": {
												"type": "object",
												"properties": {
													"id": {
														"type": "number"
													},
													"date": {
														"type": "string"
													},
													"ave_historical_occupancy": {
														"type": "number"
													},
													"ave_daily_rate": {
														"type": "number"
													},
													"ave_length_stay": {
														"type": "number"
													},
													"ave_booking_window": {
														"type": "number"
													}
												}
											}
										}
									}
								},
								"example": [
									{
										"id": 1462,
										"date": "2024-01-01",
										"ave_historical_occupancy": 0.7529,
										"ave_daily_rate": 365.8737,
										"ave_length_of_stay": 5.9678,
										"ave_booking_window": 78.5895
									}
								]
							}
						}
					},
					"400": {
						"description": "Incorrect region or date Range.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": "No region provided."
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": true,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/userdata/get": {
			"get": {
				"tags": ["Posters"],
				"description": "Use to request movie poster by imdbID.",
				"parameters": [
					{
						"name": "imdbID",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"responses": {
					"200": {
						"description": "The requested poster",
						"content": {
							"image/png": {}
						}
					},
					"400": {
						"description": "Invalid query parameters.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": "Invalid query parameters: year. Query parameters are not permitted."
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": true,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/userdata/add": {
			"post": {
				"tags": ["Posters"],
				"description": "Use to add a movie poster by imdbID.",
				"parameters": [
					{
						"name": "imdbID",
						"in": "path",
						"required": true,
						"schema": {
							"type": "string"
						}
					}
				],
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"poster": {
										"type": "string",
										"format": "binary"
									}
								}
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The movie poster has been successfully added.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": false,
									"message": "Poster uploaded successfully."
								}
							}
						}
					},
					"400": {
						"description": "Invalid query parameters.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": "Invalid query parameters: year. Query parameters are not permitted."
								}
							}
						}
					},
					"500": {
						"description": "The poster failed to write to the disk",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": "ENOENT: no such file or directory, open 'res/posters/notExist_mike@gmail.com.png"
								}
							}
						}
					}
				}
			}
		},
		"/user/register": {
			"post": {
				"tags": ["Authentication"],
				"description": "Use to register a new user.",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string"
									},
									"password": {
										"type": "string"
									}
								}
							},
							"example": {
								"email": "test@test.com",
								"password": "password"
							}
						}
					}
				},
				"responses": {
					"201": {
						"description": "The user has been successfully registered.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"message": {
											"type": "string"
										}
									}
								},
								"example": {
									"message": "User created"
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": true,
									"message": "Request body incomplete, both email and password are required"
								}
							}
						}
					},
					"409": {
						"description": "Conflict. User already exists.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": true,
									"message": "User already exists"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": true,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		},
		"/user/login": {
			"post": {
				"tags": ["Authentication"],
				"description": "Use to login a user.",
				"requestBody": {
					"content": {
						"multipart/form-data": {
							"schema": {
								"type": "object",
								"properties": {
									"email": {
										"type": "string"
									},
									"password": {
										"type": "string"
									}
								}
							},
							"example": {
								"email": "test@test.com",
								"password": "password"
							}
						}
					}
				},
				"responses": {
					"200": {
						"description": "The user has been successfully logged in.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"token": {
											"type": "string"
										},
										"token_type": {
											"type": "string"
										},
										"expires_in": {
											"type": "number"
										}
									}
								},
								"example": {
									"token": "aJWTBearerToken",
									"token_type": "Bearer",
									"expires_in": 86400
								}
							}
						}
					},
					"400": {
						"description": "Bad request.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": true,
									"message": "Request body incomplete, both email and password are required"
								}
							}
						}
					},
					"401": {
						"description": "Unauthorized. Invalid email or password.",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										},
										"message": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": true,
									"message": "Incorrect email or password"
								}
							}
						}
					},
					"500": {
						"description": "Internal server error",
						"content": {
							"application/json": {
								"schema": {
									"type": "object",
									"properties": {
										"error": {
											"type": "string"
										}
									}
								},
								"example": {
									"error": true,
									"message": "Internal server error"
								}
							}
						}
					}
				}
			}
		}
	},
	"components": {
		"securitySchemes": {
			"BearerAuth": {
				"type": "http",
				"scheme": "bearer",
				"bearerFormat": "JWT",
				"description": "Enter JWT Bearer token only"
			}
		}
	}
}
